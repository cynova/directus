name: build-images

on:
  push:
    tags:
      - 'v*'

env:
  GHCR_IMAGE: ghcr.io/cynova/directus

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          body: |
            Directus ${{ github.ref }}
          draft: false
          prerelease: false

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16.x'

      - uses: c-hive/gha-npm-cache@v1
      - run: npm ci
      - run: npm run build
      - run: node docker/pack

      - name: Cache build artifacts
        uses: actions/cache@v2
        with:
          path: '**/dist'
          key: build-artifacts-${{ github.sha }}

  publish-npm:
    if: env.NPM_TOKEN
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - name: Restore build artifacts
        uses: actions/cache@v2
        with:
          path: '**/dist'
          key: build-artifacts-${{ github.sha }}
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16.x'

      - run: npx lerna publish --force-publish --exact from-git --yes

  build-images:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - name: Restore build artifacts
        uses: actions/cache@v2
        with:
          path: '**/dist'
          key: build-artifacts-${{ github.sha }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            ${{ env.DOCKERHUB_IMAGE }}
            ${{ env.GHCR_IMAGE }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha

      - name: Login to DockerHub
        uses: docker/login-action@v1
        if: ${{ env.DOCKERHUB_IMAGE }}
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GHCR
        uses: docker/login-action@v1
        if: ${{ env.GHCR_IMAGE }}
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: './docker/Dockerfile'
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          push: true
